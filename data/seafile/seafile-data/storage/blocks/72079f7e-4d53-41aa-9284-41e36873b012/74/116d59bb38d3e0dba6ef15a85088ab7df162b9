## 1. Introduce
A project spins up temporary Linux systems with instant webshell access from any browser.
It can currently supports various versions of Ubuntu, CentOS, Arch Linux, Debian, Fedora and Alpine.
## 2. Deployment
```
# docker-compose needed
mkdir instantbox && cd $_
bash <(curl -sSL https://raw.githubusercontent.com/instantbox/instantbox/master/init.sh)    # To create a  docker compose file，at the same time we can set ip & port here
docker-compose up -d  # deploy service
```
## 3.  Operation
<pre>Run 'docker-compose up -d' then go to http://ip:8888 on your browser.
When creating a new OS, the Docker engine will create a new container in host machine.
No persistent storage found.</pre>
### 3.1 ssh into container
- ubuntu
```
apt install -y openssh-server
ssh-keygen -A    # 自动生成所有缺失的主机密钥文件
vim ~/.ssh/authorized_keys   # 在目标机器需要登录的用户下，粘贴本机公钥（密码验证不成功）
/usr/sbin/sshd     # 启动sshd
宿主机 ssh 即可
```
### 3.2 Launch WEB Cli
<pre>
The browser can only create one kind of system at the sametime
Clean the cache of browser or create a new incognito window, goes to console, create a new system in box.
then goes to eg URL: http://10.13.3.101:8888/console/container_ID(|name)/
</pre>
## 4. Shut the service down
<pre>
We're supposed to delete or purge the OS created before first, then purge the service container.
</pre>
## 5. Images  Rebuild
- 解决前端设置有效存活时间 24 h、资源上限(cpu\mem)

# 后续

目标镜像需要特别 build \

登录 与 git
```
需要openssh
sshd_config
user, 密码和家目录
修改以后 service ssh restart
vscode remote ssh
ssh -p 宿主机映射port  容器用户@宿主机ip
gitclone以及 push github 成功
```

挂载(deprecated)
```
运行参数需要--privileged 目的是确认存在 ls /dev/fuse
容器内安装 sshfs
sshfs  inboc@10.8.0.90:/home/inboc/mnt/html  mnt/
/home/inboc/mnt/html----这是一个nfs挂载的目录   （同理  mfs ----> 宿主机挂载 并隔离  分层 ----> 容器 挂载）
```

data git / data version control
install from repositry|deb package
```cli
$sudo wget \
       https://dvc.org/deb/dvc.list \
       -O /etc/apt/sources.list.d/dvc.list
$ wget -qO - https://dvc.org/deb/iterative.asc | gpg --dearmor > packages.iterative.gpg
$ sudo install -o root -g root -m 644 packages.iterative.gpg /etc/apt/trusted.gpg.d/
$ rm -f packages.iterative.gpg
$ sudo apt update
$ sudo apt install dvc
```

