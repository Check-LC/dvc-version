0 . sites mark  
	[linux soft manpage](https://www.mankier.com/)  
	[Linux Manpages](https://linux.die.net/) \
	[Devops Roadmap](https://gitbook.curiouser.top/)  \
	[咖啡吧](https://ops-coffee.cn/knowledge)  
	[云原生资料库 (jimmysong.io)](https://lib.jimmysong.io/)  
	[某集体站点](https://www.infvie.com/)  
	[ansible 中文指南](https://ansible-tran.readthedocs.io/en/latest/docs/playbooks.html)    
	[骏马金龙](https://www.junmajinlong.com/)   
	[崔亮blog](https://www.cuiliangblog.cn/)  
	[leohsiao's notes](https://leohsiao.com)  
	[丁辉博客](https://www.dinghui.org/)有较多软件和虚拟化资源  
	[PKMer知识管理软件社区](https://pkmer.cn/)  
    [GIT 指令整理](https://wangjikai.com/blog/20170215/2017-02-15-Git%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/) \
    [一个基于个人工作流分享的 up](https://blog.wsine.top/)


1 . mount 命令
```
sudo mount -t cifs  //10.13.1.5/soft /home/chao.long/samba -o domain=inboc,username=chao.long,password=****,uid=1709401132,gid=1709400513   # 挂载 samba
sudo  mount -t nfs 10.13.2.2:/path   /local/path      # 挂载nfs
```
2 . 安装google拼音
```
sudo apt install -y fcitx  fcitx-googlepinyin
im-config
sudo reboot
fcitx-config-gtk3
```
3 .
```
基础镜像名
docker search repo.inboc.net/inboc/conda:

docker pull ghcr.io/ldapaccountmanager/lam:8.4@sha256:283726bd23510f1c3bfbdcbfe861e6599e070616543aed02e9756075c97a9938  # 通过hash值确定版本
```
4 . docker 引擎未完全开启
```
Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version": dial unix /var/run/docker.sock: connect: permission denied

解决: 
ll /var/run/docker.sock
sudo usermod -aG docker inboc
sudo systemctl restart docker
sudo -i 重新登录使生效 
su - inboc
```
5 . 用于向一个没有网络的机器安装某个包，解决其安装和相关依赖
apt-redepends 下载软件包和相关依赖用于离线安装
[apt-rdepends忽略包的方法](https://superuser.com/questions/1112525/ignore-apt-get-download-errors/1137335#1137335)
[建立依赖关系，制作离线的本地源的方式](https://blog.csdn.net/qq_53590171/article/details/128143692?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4-128143692-blog-131275033.235^v38^pc_relevant_sort_base1&spm=1001.2101.3001.4242.3&utm_relevant_index=7)

6 . linux 对容器抓包
```
找到Pid
	docker top <container> 
	docker inspect <container> | grep Pid
进入容器名称空间
	sudo nsenter -t <Pid> -n
	exit 退出
在其中抓包
	tcpdump -i <net device>
k8s环境,需要定义节点,在相应节点找到container_id,同样执行抓包
	kubectl get pod -n <命名空间> <pod名> -o wide
	kubectl get pod -n <命名空间> <pod名> -o yaml | grep containerID
```

7 . ubuntu 2204 登录帐号后黑屏（本例是由输入法安装导致的）
	```
	登录后 ctrl+alt+F3 进入命令行
	sudo systemctl stop gdm3
	当前用户的家目录：  mv .config .cofig.bak
	sudo systemctl start gdm3
	重启电脑，恢复正常
	```

7.1 几秒钟没有任何操作系统自动[黑屏](https://blog.csdn.net/qq_41202069/article/details/108022043)
```shell
xset -q   [[查询]] X Window 系统的设置和状态
sudo xset -dpms    [[用于在]] X Window 系统中禁用 DPMS DPMS 是一种用于管理显示器电源的功能，它可以使显示器在一段时间没有用户输入时自动进入节能模式或关闭显示
```

7.2 登录之后不能正常进入图形化界面，卡顿中。检查发现需要更新snap

8 . 设置主副屏
```
xrandr  # 查看输出接口
xrandr --output HDMI-0 --auto --primary   # 将hdmi输出的屏幕设置为主屏
xrandr --output DP-3 --right-of HDMI-0 --auto  # Hdmi输出的屏幕设置为右侧屏幕
```

9 .  k8s 集群， kubeadm 部署疑问
9.1
```
inboc@inboc-sys-test-10:~/kube$ sudo kubectl apply -f kube-flannel.yml 
The connection to the server localhost:8080 was refused - did you specify the right host or port?

（主从节点一致，只要是希望运行这个命令，即检查以下内容）
kubectl命令需要使用kubernetes-admin来运行，需要admin.conf文件（conf文件是通过“ kubeadmin init”命令在主节点/etc/kubernetes 中创建），但是从节点没有conf文件，也没有设置 KUBECONFIG =/root/admin.conf环境变量，所以需要复制conf文件到从节点，并设置环境变量就OK了

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
```
9.2
```
$  kubectl describe nodes inboc-sys-test-09
	KubeletNotReady    container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error:
	cni plugin not initialized
解决
sudo systemctl stop apparmor
sudo systemctl disable apparmor
sudo systemctl restart containerd.service
AppArmor是一种Linux内核安全模块，用于应用程序的强制访问控制（MAC）和应用程序沙箱化，类似selinux。
```
10 . java虚拟机，使用.jnlp文件登录服务器
```
sudo apt update 
sudo apt install default-jdk 
sudo apt install icedtea-netx icedtea-plugin
javaws file.jnlp
# 出现 duplicate exists
	ps -aux | grep javaws
	kill -9 pid
# 出现network connection has been dropped
	返回web ui，并reset idrac，重新下载jnlp文件
```

11 . 服务器禁止了密码登录，使用密钥文件登录
  eg: local--10.13.3.106, target--10.13.3.107
  local: 存在本机的公钥、私钥文件
  target settup:
```
vim /etc/ssh/sshd_config
	PubkeyAuthentication  yes                                  # 使用密钥文件连接
	AuthorizedKeysFile      .ssh/authorized_keys     # 指定公钥存放路径
	PasswordAuthentication  no                                # 禁止密码登录
vim ~/.ssh/authorized_keys
	粘贴 local machine 公钥内容
systemctl restart ssh
rsync -avz /etc/ldap/ldap01_slapd_key.pem 10.13.3.107:/root/  -e "ssh -i ~/.ssh/id_rsa"     # 测试
```

12 . kubesphere创建集群时出现了ssh连接失败。
```
因为不能密码登录，修改了密钥文件登录 （注意kubernetes 1.24 之后 cri 不是再默认docker，这部分需要修改）
/home/inboc/kubesphere/config-sample.yaml

- {name: worker1, address: 10.13.3.109, internalAddress: 10.13.3.109, user: inboc, privatekeyPath: "/home/inboc/.ssh/id_rsa"}
```

13 . 表现： 用户不能进入和登录ubuntu系统
- describe： ailed to initialize credentials using keytab [MEMORY:/etc/krb5.keytab]: Preauthentication failed. Unable to create GSSAPI-encrypted LDAP connection.
- 解决：  将用户 清除再加入 AD  域管理
```
systemctl stop sssd 
rm -rf /var/lib/sss/db/*
realm leave 
realm join inboc.net 

vim /etc/sssd/sssd.conf
 [sssd] 
 domains = inboc.net 
 config_file_version = 2 
 services = nss, pam 
 [domain/inboc.net] 
 default_shell = /bin/bash 
 krb5_store_password_if_offline = True 
 cache_credentials = True 
 krb5_realm = INBOC.NET 
 realmd_tags = manages-system joined-with-adcli 
 id_provider = ad 
 fallback_homedir = /home/%u 
 ad_domain = inboc.net 
 use_fully_qualified_names = False 
 ldap_id_mapping = True 
 access_provider = simple 
 simple_allow_users = yu.liu 
 
 systemctl restart sssd 
 id <username> 
 chown 1709401116:1709400513 -R /home/<username>/
```

14. 重装系统 boostrap 的准备
```
#!/bin/bash
# 安装必要软件
echo "Inboc@2020" | sudo -S apt update
sudo apt install -y openssh-server vim build-essential fcitx-googlepinyin 
# bootstrap 有关 role 使用 root 执行
sudo tee -a /etc/ssh/sshd_config << EOF
PermitRootLogin yes
EOF
sudo systemctl restart sshd

# 禁用 ubuntu 默认的开源显卡驱动
sudo tee -a /etc/modprobe.d/blacklist.conf << EOF
blacklist nouveau
options nouveau modeset=0
EOF
sudo update-initramfs -u

# 设置 fcitx 输入法框架
im-config -n fcitx
#fcitx-config # 设置输入法为谷歌拼音，如果此时不能成功设置，当稍后重启之后再次配置

#shutdown -r now

# lspci | grep -i vga
# 重启后手动安装显卡驱动（samba或nvidia download），退出图形化安装最好（alt+ctrl+F3）
#./NVIDIA-Linux-x86_64-535.129.03.run  -s
# nvidia-smi 确认
```

## 15 . 安装输入法 fcitx-googlepinyin
```
sudo apt install -y fcitx-googlepinyin
im-config -n fcitx # 设置 fcitx 输入法框架
reboot    # 为了重载输入法
fcitx-configtool   # 设置输入法
```

15 . markdown 使用 \
15.1 任务列表
效果：
- [x] 已完成的任务
- [ ] weiwancheg 
```markdown
- [ ] weiwancheng  
- [x] wanc
```
15.2 折叠内容
```markdown
<details>
<summary>展开查看</summary>
<pre><code>
需要折叠的内容，code/text
</code>
</pre>
</details>
```
效果：
<details>
<summary>展开查看</summary>
<pre><code>
需要折叠的内容，code/text
</code>
</pre>
</details>

16 . bash 显示相对路径

`~/.bashrc` 替换这部分内容; 然后执行命令生效'source  ~/.bashrc '
```bash
if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ ' #主要生效是这一变量
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\W\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \W\a\]$PS1"
    ;;
*)
    ;;
esac
```

17 . nvidia driver install
>[!debug]
>执行安装，两次出现报错 'build kernal module error' \
>有一次在日志中表明是 gcc 编译器的使用版本出现冲突，另一次是系统内核版本较高是 6.5，出现类似的 build kernal module error \
>解决：安装更新的 gcc-12, 执行此命令并配置合适参数将 gcc 使用版本设置为12， `update-alternative`
> ```
> sudo apt install -y gcc-12 g++-12
> sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100
> sudo update-alternatives --config gcc
> gcc --version
> ```
> 进入 ubuntu 的文字系统（Alt + Ctrl + F3），关闭桌面显示（service gdm3 stop），安装驱动（./nvidia.\*.run -s）, 打开桌面显示，nvidia-smi 检查 最好重启一次机器。


## 16 .  对 url 状态快速检测的显示命令
```
curl -w "总时间: %{time_total}s\n名称解析时间: %{time_namelookup}s\n连接时间: %{time_connect}s\nTLS握手时间: %{time_appconnect}s\n等待时间: %{time_starttransfer}s\n数据传输时间: %{time_total}s\nHTTP状态码: %{http_code}\n" -o /dev/null -s baidu.com (-k baidu.com)
```