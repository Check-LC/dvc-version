[wiki home with architecture](https://github.com/milvus-io/milvus/wiki)
## 1. Build  Environment
### 1.1 Go installation
```shell
# remove previous Go insstallation
rm  -rf  /usr/local/go/
# extract the archive into /usr/local
wget https://go.dev/dl/go1.21.5.linux-amd64.tar.gz
tar -tvf go1.21.5.linux-amd64.tar.gz
tar -zxvf go1.21.5.linux-amd64.tar.gz -C /usr/local/
ls /usr/local/
	bin  etc  games  go  include  lib  man  sbin  share  src
# Add /usr/local/go/bin to the `PATH` environment variable or `/etc/profile`
export PATH=$PATH:/usr/local/go/bin
```
### 1.2 Verify  and Confirm the installation of Go
```
go version
```
### 1.3 Other Compilation Tools
```
sudo apt install -y cmake gcc
pip install conan==1.61.0
```
## 2. Milvus
### 2.1 Build
```shell
# Clone github repository.
git clone https://github.com/milvus-io/milvus.git

# Install third-party dependencies.
cd milvus/
./scripts/install_deps.sh     #完成这一步就可以使用milvus的 tarball，使用脚本时记得修改声明共享库文件的路径

# Compile Milvus.
make verifiers  # pre-prepare , optional
make 1> /dev/null                 # 编译时的路径比较重要，目前测试：配置生效在编译的路径下

# 使用下载的source.tar.gz, 解压后 make 将报错: 
make[1]: Entering directory '/opt/milvus-2.2.16/cmake_build'
make[1]: *** No rule to make target 'install'.  Stop.
make[1]: Leaving directory '/opt/milvus-2.2.16/cmake_build'
make: *** [Makefile:138: build-cpp] Error 1
```
<details><summary>展开查看，milvus commands</summary>
<pre><code>
```
$ milvus
[server type]
        standalone
        querynode
        indexnode
        datacoord
        datanode
        embedded
        rootcoord
        proxy
        querycoord
        indexcoord
        mixture
milvus run [server type] [flags]
        Start a Milvus Server.
        Tips: Only the server type is 'mixture', flags about starting server can be used.
[flags]
        -rootcoord 'true'
                Start the rootcoord server.
        -querycoord 'true'
                Start the querycoord server.
        -indexcoord 'true'
                Start the indexcoord server.
        -datacoord 'true'
                Start the datacoord server.
        -alias ''
                Set alias
milvus stop [server type] [flags]
        Stop a Milvus Server.
[flags]
        -alias ''
                Set alias
milvus mck run [flags]
        Milvus data consistency check.
        Tips: The flags are optional.
[flags]
        -etcdIp ''
                Ip to connect the ectd server.
        -etcdRootPath ''
                The root path of operating the etcd data.
        -minioAddress ''
                Address to connect the minio server.
        -minioUsername ''
                The username to login the minio server.
        -minioPassword ''
                The password to login the minio server.
        -minioUseSSL 'false'
                Whether to use the ssl to connect the minio server.
        -minioBucketName ''
                The bucket to operate the data in it
milvus mck cleanTrash [flags]
        Clean the back inconsistent data
        Tips: The flags is the same as its of the 'milvus mck [flags]'
```
</code></pre></details>

### 2.2 Managed by Systemd （Useless)
```bash
sudo tee  /etc/systemd/system/milvus.service  << EOF
[Unit]
Description=Milvus Service
After=network.target

[Service]
ExecStart=/opt/milvus/bin/milvus run mixture -rootcoord -querycoord -datacoord -indexcoord
ExecStop=/opt/milvus/bin/milvus stop mixture -rootcoord -querycoord -datacoord -indexcoord
WorkingDirectory=/opt/milvus
Restart=always

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable milvus --now
```
## 3. Dependencies
### 3.1 [Etcd](01_Etcd.md)
![01_Etcd](01_Etcd.md)
### 3.2 message queue
[pulsar 替换为kafka](02_Pulsar.md)，pulsar部署测试中，连接未成功

![kafka](04_kafka%20with%20kraft.md)
### 3.3 Minio
Use local storage instead
## 4. Milvus Configurations
Compared with [0.Helm Install milvus (CPU)](0.Helm%20Install%20milvus%20(CPU).md)\
[reference](https://github-wiki-see.page/m/milvus-io/milvus/wiki/Milvus-configuration)\
**components division**

| host | identity | command |
| :--: | :--: | :--: |
| server1 | rootcoord、proxy | milvus run rootcoord;  helm install attu; ( ) |
| server2 | datanode、datacoord、querycoord | milvus run datanode; milvus run querynode；milvus run datacoord; 数据存储在本 datanode 节点 |
| server3 | indexnode、indexcoord、querynode | milvus run indexnode; milvus run indexcoord；milvus run querycoord |
| port | rootcoord-53100、datanode--21124 | datacrood-13333、indexnode-21121、indexcrood-31000、proxy-19529/19530、querycrood-19531、querynode-21123 |

<details> <summary>展开查看，milvus.yaml 修改内容记录：</summary>
<pre>
etcd:
  endpoints: etcd.inboc.net:2379
  rootPath: milvus
localStorage:
  path: /var/lib/milvus/data/
mq:
  # Default value: "default"
  # Valid values: [default, pulsar, kafka, rocksmq, natsmq]
  type: kafka
#  needs to comment the pulsar configs
kafka:
  brokerList: kafka.inboc.net:9092
common:
  chanNamePrefix:
    cluster: milvus
  storageType: local # please adjust in embedded Milvus: local, available values are [local, remote, opendal]
  
  ！！！attention: 每个身份的组件运行的 IP 需要根据分布设计修改地址
 </pre>
</details>

## 5. Fault
### 5.1 配置文件指向错误: 运行需要查找的文件一定会指向编译执行时的路径
<pre>
Dec 20 10:29:46 inboc-sys-test-05 milvus[64550]: [2023/12/20 10:29:46.502 +08:00] [DEBUG] [sessionutil/session_util.go:254] ["Session try to connect to etcd"]
Dec 20 10:29:51 inboc-sys-test-05 milvus[64550]: {"level":"warn","ts":"2023-12-20T10:29:51.502+0800","logger":"etcd-client","caller":"v3@v3.5.5/retry_interceptor.go:62","msg":"retrying of unary invoker failed","target":"etcd-endpoints://0xc001200540/localhost:2379","attempt":0,"error":"rpc error: code = DeadlineExceeded desc = latest balancer error: last connection error: connection error: desc = \"transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused\""}
</pre>

**solution**
<pre>    
start_cluster.sh 的前提部分, 在程序启动中加载`libjemalloc.so` 动态库
</pre>
### 5.2 etcd 验证，没有全部连接成功
- describe
```shell
etcdctl get --prefix '' --endpoints='10.13.3.106:2379,10.13.3.107:2379'
milvus/kv/gid/idTimestamp�ϻ���>
milvus/kv/gid/timestamp�ϻ���
milvus/meta/root-coord/database/db-info/1default (�����ֳ�
milvus/meta/session/datacoord{"ServerID":6,"ServerName":"datacoord","Address":"10.13.3.107:13333","Exclusive":true,"TriggerKill":true,"Version":"2.3.2","IndexEngineVersion":},"LeaseID":5727325882737886644,"HostName":"inboc-sys-test-07"}
milvus/meta/session/id8
milvus/meta/session/indexcoord{"ServerID":6,"ServerName":"indexcoord","Address":"10.13.3.107:13333","Exclusive":true,"TriggerKill":true,"Version":"2.3.2","IndexEngineVersion":},"LeaseID":5727325882737886641,"HostName":"inboc-sys-test-07"}
milvus/meta/session/indexnode-3{"ServerID":3,"ServerName":"indexnode","Address":"10.13.3.105:21121","TriggerKill":true,"Version":"2.3.2","IndexEngineVersion":{},"LeaseID":5727325882737886221,"HostName":"inboc-sys-test-05","EnableDisk":true}
milvus/meta/session/querynode-2{"ServerID":2,"ServerName":"querynode","Address":"10.13.3.106:21123","TriggerKill":true,"Version":"2.3.2","IndexEngineVersion":{"CurrentIndexVersion":1},"LeaseID":2488956275683680315,"HostName":"inboc-sys-test-06"}
milvus/meta/session/querynode-5{"ServerID":5,"ServerName":"querynode","Address":"10.13.3.106:44559","TriggerKill":true,"Version":"2.3.2","IndexEngineVersion":{"CurrentIndexVersion":1},"LeaseID":5727325882737886536,"HostName":"inboc-sys-test-06"}
milvus/meta/snapshots/root-coord/database/db-info/1_ts446470784146210817
```
- 原因猜想
<p>server type 启动顺序 、配置文件、服务类型在主机的分布不科学</p>
<p>error from logs: rootcoord启动失败</p>
### 5.3 rootcoord stopped 
- describe
<pre>
[2023/12/21 18:15:24.685 +08:00] [INFO] [msgstream/mq_factory.go:103] ["Msg Stream state"] [can_produce=true]
time="2023-12-21T18:15:24+08:00" level=info msg="Connecting to broker" remote_addr="pulsar://pulsar.inboc.net:6650"
time="2023-12-21T18:15:24+08:00" level=info msg="TCP connection established" local_addr="10.13.3.105:48904" remote_addr="pulsar://pulsar.inboc.net:6650"
time="2023-12-21T18:15:24+08:00" level=info msg="Connection is ready" local_addr="10.13.3.105:48904" remote_addr="pulsar://pulsar.inboc.net:6650"
[2023/12/21 18:15:24.689 +08:00] [WARN] [msgstream/mq_msgstream.go:138] ["retry func failed"] [retried=0] [error=MetadataError]
[2023/12/21 18:15:27.697 +08:00] [WARN] [msgstream/mq_msgstream.go:138] ["retry func failed"] [retried=4] [error=MetadataError]
[2023/12/21 18:15:29.544 +08:00] [DEBUG] [config/etcd_source.go:141] ["etcd refreshConfigurations"] [prefix=milvus/config] [endpoints="[etcd.inboc.net:2379]"]
</pre>
- 原因猜想
<p>
pulsar 连接过程中的名称空间？--> 连接失败 --> rootcoord stop
</p>