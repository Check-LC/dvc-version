```yaml
# 选择 main 分支下的镜像是为了满足 exlore-logs 的使用
loki.image.tag: main-4c563f7  

# 因为 rancher 中使用的 dns 服务组件是不一致的
global.dnsService: "rke2-coredns-rke2-coredns"

# 添加 loki 系统的使用租户并在 gateway 中需要以其为验证
loki.tenants: 
	- name: inboc  
	  password: Inboc@2020

# 选择是否接受“老/过期”的样本日志
loki.limits_config.reject_old_samples: true

# 将“老/过期”的样本日志界定为 168h（此处要区别 loki 的 retention--设置于 `tsdb schemaConfig` 中）
loki.limits_config.reject_old_samples_max_age: 168h

loki.limits_config.volume_enabled: true

# 连接外部的MinIO,里面的变量来自另一个设置的转换（loki 程序内进行的转换）
loki.storage:
    bucketNames:
      chunks: loki
      ruler: loki
      admin: loki
    type: s3
    s3:
      s3: "s3://loki"
      endpoint: "http://10.1.0.81:9000"
      region: null
      secretAccessKey: ${SECRETKEY}
      accessKeyId: ${ACCESSID}
      signatureVersion: v4
      s3ForcePathStyle: true
      insecure: true

# 开启缓存
loki.memcached.chunk_cache.enabled: true
loki.memcached.results_cache.enabled: true

# 配置存储模式; 以什么时间节点开始，执行的存储方式，存储类型，schema设置，相应索引。（有一个test的配置，相应需要关闭，否则冲突）
loki.schemaConfig.configs:
      - from: "2024-05-01"    # 一定要加引号
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h

# explore-logs 配合使用的开启设置
loki.pattern_ingester.enabled: true
loki.useTestSchema: false

test.enabled: false

# 
gateway.basicAuth.enabled: true

# 允许 secrets 的键转化为环境变量
gateway.extraArgs:
	- -config.expand-env=true

# 指定目标 secret；此项与上一项在loki-read|write|backend三者都需要配置
gateway.extraEnvFrom:
  - secretRef:  
      name: eso-loki-s3-secret

write.persistence.storageClass: longhorn
# read、backend同上
```
