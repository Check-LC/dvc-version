## 1 . 本次目的: 使用 exporter 确认是否会抓取到关于配置的指标。
### 1.1 准备 docker-compose file
```yaml
version: '3'
services:
  prometheus:
    image: "prom/prometheus:v2.49.1"
    networks:
      - prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
  
  nginx:
    image: "nginx:tag"
    networks:
      - prometheus
    restart: always
    volumes:
      - ./nginx:/etc/nginx        # 拷贝于已经存在的 nginx
    ports:
      - "80:80"   # web 服务
      - "8080:8080"    # 指标暴露使用的端口
  
  nginx-exporter:
    image: "nginx/nginx-prometheus-exporter:1.1.0"
    networks:
      - prometheus
    restart: always
    command: --nginx.scrape-uri=http://nginx-exporter:9113/stub_status     # nginx 通过配置文件指定 server block, 暴露指标
    ports:
      - "9113:9113"

networks:    # 创建 docker 网络， 全部在这个网络下，可以用服务名解析
  prometheus:
```
### 1.2 nginx 配置文件
```bash
server {
  listen 8080;
  server_name localhost;
  gzip on;
  gzip_http_version 1.1;
  gzip_vary on;
  gzip_comp_level 6;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
  location / {
    root /usr/share/nginx/html;
    index index.html index.html;
  }
  location = /stub_status {
    stub_status;
  }
}
```

### 1.3 准备 prometheus.yml
```yaml
global:
  scrape_interval:     5s
  evaluation_interval: 5s

rule_files:
  #- 'alert.rules'

scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['prometheus:9090']

  - job_name: 'nginx'
    static_configs:
      #- targets: ['http://10.8.0.90:9113']
      - targets: ['nginx-exporter:9113']
        labels:   # [标签讲解](https://blog.csdn.net/qq_34556414/article/details/113503945)
          instance: test   
```
### 1.4 结果
    有效暴露指标很少

| Name | Type | Description |
| ---- | ---- | ---- |
| `nginx_connections_accepted` | Counter | Accepted client connections. |
| `nginx_connections_active` | Gauge | Active client connections. |
| `nginx_connections_handled` | Counter | Handled client connections. |
| `nginx_connections_reading` | Gauge | Connections where NGINX is reading the request header. |
| `nginx_connections_waiting` | Gauge | Idle client connections. |
| `nginx_connections_writing` | Gauge | Connections where NGINX is writing the response back to the client. |
| `nginx_http_requests_total` | Counter | Total http requests. |
### 1.5 浏览器和 prom 时间不一致
`chrony` 服务控制，连接相同时间服务器。